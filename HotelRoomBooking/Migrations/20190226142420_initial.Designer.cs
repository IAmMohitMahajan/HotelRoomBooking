// <auto-generated />
using System;
using HotelRoomBooking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelRoomBooking.Migrations
{
    [DbContext(typeof(HotelRoomBookingDbContext))]
    [Migration("20190226142420_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelRoomBooking.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate");

                    b.Property<DateTime>("CheckIn");

                    b.Property<DateTime>("CheckOut");

                    b.Property<int>("CustomerId");

                    b.Property<int>("HotelId");

                    b.Property<int>("NumberOfRooms");

                    b.Property<int>("RoomId");

                    b.Property<double>("TotalAmount");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelRoomBooking.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress");

                    b.Property<long>("CustomerContactNumber");

                    b.Property<DateTime>("CustomerDateOfBirth");

                    b.Property<string>("CustomerEmailId");

                    b.Property<string>("CustomerFirstName");

                    b.Property<string>("CustomerGender");

                    b.Property<string>("CustomerLastName");

                    b.Property<string>("CustomerPassword");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HotelRoomBooking.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotelAddress");

                    b.Property<string>("HotelCity");

                    b.Property<long>("HotelContactNumber");

                    b.Property<string>("HotelDistrict");

                    b.Property<string>("HotelEmailId");

                    b.Property<string>("HotelName");

                    b.Property<int>("HotelStar");

                    b.Property<string>("HotelState");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("HotelRoomBooking.Models.HotelFacility", b =>
                {
                    b.Property<int>("HotelFacilityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ac");

                    b.Property<bool>("Ekettle");

                    b.Property<bool>("IsAvilable");

                    b.Property<bool>("Refrigerator");

                    b.Property<int>("RoomId");

                    b.Property<bool>("Wifi");

                    b.HasKey("HotelFacilityId");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("HotelFacilities");
                });

            modelBuilder.Entity("HotelRoomBooking.Models.HotelRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId");

                    b.Property<int>("HotelId");

                    b.Property<int>("RoomPrice");

                    b.Property<string>("RoomType");

                    b.HasKey("RoomId");

                    b.HasIndex("BookingId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("HotelRoomBooking.Models.UserDetail", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<long>("UserContactNumber");

                    b.Property<string>("UserEmailId");

                    b.Property<string>("UserName");

                    b.Property<string>("UserType");

                    b.HasKey("UserId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("HotelRoomBooking.Models.Booking", b =>
                {
                    b.HasOne("HotelRoomBooking.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelRoomBooking.Models.HotelFacility", b =>
                {
                    b.HasOne("HotelRoomBooking.Models.HotelRoom", "HotelRoom")
                        .WithOne("HotelFacility")
                        .HasForeignKey("HotelRoomBooking.Models.HotelFacility", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HotelRoomBooking.Models.HotelRoom", b =>
                {
                    b.HasOne("HotelRoomBooking.Models.Booking", "Booking")
                        .WithMany("HotelRooms")
                        .HasForeignKey("BookingId");

                    b.HasOne("HotelRoomBooking.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
